What happens when you initialize a repository? Why do you need to do it?
	Creates a git respository to store your changes (for version control)

How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area is a transit directory between the working directory and the repository. It allows you to control exactly what gets pushed to the repository.

How can you use the staging area to make suer you have one commit per logical change?
	Using git diff, git diff --staged, before committing

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches allow you to change direction or change focus without affecting the main project

How do the diagrams help you visualize the branch structure?
	It allows you to see the branch structure and see how branches can be added or lost

What is the result of merging two branches together? Why do we represent it in the diagram in the way we do?
	Merging two branches together keeps the commits from both branches. If you delete the branch before merging the commits, you lose the commits to that branch. In a sense, if you wanted to try something new, you would create a new branch then merge those commits into the master. If not, you can delete the branch without affecting the master.

What are the pros and cons of Git's automatic merging vs always doing merges manually?
	Pro: better control, as you understand the changes (Git does not)
	Con: you have to resolve conflicts, which could get annoying...

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	You have control over the repository; you may not want to push all changes.